name: Docker Nightly Latest (Main Branch)

on:
  push:
    branches: [main]

# Define environment variables
env:
  GHCR_IMAGE_NAME: ${{ vars.GHCR_IMAGE_NAME }}
  DOCKERHUB_IMAGE_NAME: ${{ vars.DOCKERHUB_IMAGE_NAME }}
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  # Enable Docker BuildKit
  DOCKER_BUILDKIT: 1

# Define permissions
permissions:
  contents: read # Needed to checkout the code
  packages: write # Needed to push images to GHCR
  # pull-requests: write is not needed for main branch builds

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup PNPM
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Install Python and PlatformIO
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install PlatformIO and ESP tools
        run: |
          python -m pip install --upgrade pip
          pip install platformio esptool

      - name: Run build steps (adjust target as needed)
        env:
          NODE_ENV: production
        run: pnpm nx run-many --target=build

      # Upload build artifacts to be used in Docker build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ github.run_id }} # Unique artifact name per run
          path: |
            dist/

  # Build and push Docker container
  build-push-container:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Download build artifacts
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts-${{ github.run_id }} # Match the upload name
          path: dist

      # Debug: List directory contents after download (optional, can be removed)
      - name: List files after download
        run: ls -la

      # Set up Docker Buildx for GHA cache support
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Read Node.js version from .nvmrc
      - name: Get Node.js Version
        id: node-version
        run: echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_OUTPUT

      # Add step to get short SHA
      - name: Get short SHA
        id: vars
        run: echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT

      # Build and push Docker image
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ env.GHCR_IMAGE_NAME }}:nightly-latest
            ghcr.io/${{ env.GHCR_IMAGE_NAME }}:nightly-${{ steps.vars.outputs.SHORT_SHA }}
            ${{ env.DOCKERHUB_IMAGE_NAME }}:nightly-latest
            ${{ env.DOCKERHUB_IMAGE_NAME }}:nightly-${{ steps.vars.outputs.SHORT_SHA }}
          build-args: |
            NODE_VERSION=${{ steps.node-version.outputs.NODE_VERSION }}
          labels: |
            # Add relevant labels for main branch builds
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # No PR comment step needed for main branch
